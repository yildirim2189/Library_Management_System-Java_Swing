package com.yildirimbayrakci.lms;

import com.yildirimbayrakci.entity.Account;
import com.yildirimbayrakci.entity.Book;
import com.yildirimbayrakci.entity.Category;
import com.yildirimbayrakci.enums_and_constants.AccountType;
import com.yildirimbayrakci.enums_and_constants.BookStatus;
import com.yildirimbayrakci.util.HibernateUtils;
import com.yildirimbayrakci.util.Search;
import com.yildirimbayrakci.util.TableColumnAdjuster;
import com.yildirimbayrakci.util.MyPdfWriter;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 * Kitap yönetimi için tanımlanmış bir sınıftır.
 *
 * @since 26/11/2019
 * @author YILDIRIM
 *
 *
 *
 *
 */
public class BookManagement extends javax.swing.JInternalFrame {

    /**
     * Creates new form BookManagement
     *
     * @param account Account class object.
     */
    private Account account;

    public BookManagement(Account account) {

        initComponents();
        this.account = account;
        setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bif = (BasicInternalFrameUI) this.getUI();
        bif.setNorthPane(null);

        DefaultTableCellRenderer dtcrenderer = new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable jtable, Object o, boolean bln, boolean bln1, int i, int i1) {
                Component cellComponent = super.getTableCellRendererComponent(jtable, o, bln, bln1, i, i1);
                Border padding = BorderFactory.createEmptyBorder(0, 5, 0, 0);
                setBorder(BorderFactory.createCompoundBorder(getBorder(), padding));
                return cellComponent;
            }
        };
        //0,5,6,1
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        jTable_books.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        jTable_books.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
        jTable_books.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
        jTable_books.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);

        // 2,3,4,8
        jTable_books.getColumnModel().getColumn(2).setCellRenderer(dtcrenderer);
        jTable_books.getColumnModel().getColumn(3).setCellRenderer(dtcrenderer);
        jTable_books.getColumnModel().getColumn(4).setCellRenderer(dtcrenderer);
        jTable_books.getColumnModel().getColumn(8).setCellRenderer(dtcrenderer);

        // 7
        jTable_books.getColumnModel().getColumn(7).setCellRenderer(new CustomRenderer());

        jPanel_reservation.setVisible(false);

        if (account.getType() != AccountType.ADMIN) {
            jPanel_BookEditingArea.setVisible(false);
            jPanel_reservation.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_bookTab = new javax.swing.JPanel();
        jButton_searchBook = new javax.swing.JButton();
        jTextField_search = new javax.swing.JTextField();
        jComboBox_sortCriteria = new javax.swing.JComboBox<>();
        jComboBox_searchCategory = new javax.swing.JComboBox<>();
        jComboBox_searchCriteria = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane_books = new javax.swing.JScrollPane();
        jTable_books = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel_message = new javax.swing.JLabel();
        jLabel_rowCount = new javax.swing.JLabel();
        jButton_createPDF = new javax.swing.JButton();
        jPanel_BookEditingArea = new javax.swing.JPanel();
        jButton_addBook = new javax.swing.JButton();
        jTextField_numberOfPages = new javax.swing.JTextField();
        jLabel_numberOfPages = new javax.swing.JLabel();
        jTextField_isbn = new javax.swing.JTextField();
        jLabel_isbn = new javax.swing.JLabel();
        jLabel_title = new javax.swing.JLabel();
        jTextField_title = new javax.swing.JTextField();
        jLabel_publishYear = new javax.swing.JLabel();
        jTextField_publishYear = new javax.swing.JTextField();
        jButton_deleteBook = new javax.swing.JButton();
        jButton_editBook = new javax.swing.JButton();
        jButton_cleanFields = new javax.swing.JButton();
        jComboBox_bookStatus = new javax.swing.JComboBox<>();
        jComboBox_categories = new javax.swing.JComboBox<>();
        jLabel_category = new javax.swing.JLabel();
        jLabel_status = new javax.swing.JLabel();
        jTextField_publisher = new javax.swing.JTextField();
        jTextField_author = new javax.swing.JTextField();
        jLabel_author = new javax.swing.JLabel();
        jLabel_publisher = new javax.swing.JLabel();
        jPanel_reservation = new javax.swing.JPanel();
        jButton_reserveBook = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(930, 510));
        setVerifyInputWhenFocusTarget(false);

        jPanel_bookTab.setBackground(new java.awt.Color(222, 222, 222));
        jPanel_bookTab.setPreferredSize(new java.awt.Dimension(870, 505));

        jButton_searchBook.setText("Kitap Ara");
        jButton_searchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchBookActionPerformed(evt);
            }
        });

        jComboBox_sortCriteria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Başlık", "Yazar", "ISBN" }));

        jComboBox_searchCategory.setModel(new DefaultComboBoxModel<>(new String[] { "Tümü" }));
        for(Category c : HibernateUtils.bringCategories()){
            jComboBox_searchCategory.addItem(c.getName());
        }

        jComboBox_searchCriteria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Başlık", "Yazar", "ISBN"}));

        jTable_books.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Kitap Id","ISBN", "Başlık", "Yazar", "Yayın","Yayın Yılı","Sayfa Sayısı","Durum","Kategori"
            }
        ));
        jTable_books.setName("Kitaplar"); // NOI18N
        jTable_books.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_booksMouseClicked(evt);
            }
        });
        jTable_books.getTableHeader().setReorderingAllowed(false);
        jScrollPane_books.setViewportView(jTable_books);

        jLabel1.setText("Kategori");

        jLabel2.setText("Sırala");

        jLabel3.setText("Arama Kriteri");

        jLabel4.setText("Mesaj");

        jLabel_message.setForeground(new java.awt.Color(204, 0, 0));
        jLabel_message.setText(" ");

        jLabel_rowCount.setText("Kayıt: ");

        jButton_createPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/pdf.png"))); // NOI18N
        jButton_createPDF.setText("PDF Oluştur");
        jButton_createPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_createPDFActionPerformed(evt);
            }
        });

        jPanel_BookEditingArea.setBackground(new java.awt.Color(222, 222, 222));

        jButton_addBook.setText("Ekle");
        jButton_addBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addBookActionPerformed(evt);
            }
        });

        jLabel_numberOfPages.setText("Sayfa Sayısı");

        jLabel_isbn.setText("ISBN");

        jLabel_title.setText("Başlık");

        jLabel_publishYear.setText("Yayın Yılı");

        jButton_deleteBook.setText("Sil");
        jButton_deleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_deleteBookActionPerformed(evt);
            }
        });

        jButton_editBook.setText("Düzenle");
        jButton_editBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_editBookActionPerformed(evt);
            }
        });

        jButton_cleanFields.setText("Temizle");
        jButton_cleanFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cleanFieldsActionPerformed(evt);
            }
        });

        jComboBox_bookStatus.setModel(new javax.swing.DefaultComboBoxModel<>());
        for(BookStatus b : BookStatus.values()){
            jComboBox_bookStatus.addItem(b.displayName());
        }

        jComboBox_categories.setModel(new DefaultComboBoxModel<>());
        for(Category c: HibernateUtils.bringCategories()){
            jComboBox_categories.addItem(c.getName());
        }

        jLabel_category.setText("Kategori");

        jLabel_status.setText("Durum");

        jLabel_author.setText("Yazar");

        jLabel_publisher.setText("Yayın");

        javax.swing.GroupLayout jPanel_BookEditingAreaLayout = new javax.swing.GroupLayout(jPanel_BookEditingArea);
        jPanel_BookEditingArea.setLayout(jPanel_BookEditingAreaLayout);
        jPanel_BookEditingAreaLayout.setHorizontalGroup(
            jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BookEditingAreaLayout.createSequentialGroup()
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_isbn)
                    .addComponent(jLabel_title)
                    .addComponent(jLabel_author)
                    .addComponent(jLabel_publisher))
                .addGap(39, 39, 39)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_title, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_author, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_publisher, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_numberOfPages)
                    .addComponent(jLabel_publishYear)
                    .addComponent(jLabel_category)
                    .addComponent(jLabel_status))
                .addGap(18, 18, 18)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_numberOfPages, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_publishYear, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_categories, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_bookStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton_editBook, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jButton_addBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_deleteBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_cleanFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_BookEditingAreaLayout.setVerticalGroup(
            jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BookEditingAreaLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_isbn)
                    .addComponent(jTextField_isbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_numberOfPages)
                    .addComponent(jTextField_numberOfPages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_addBook))
                .addGap(19, 19, 19)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_title)
                    .addComponent(jTextField_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_publishYear)
                    .addComponent(jTextField_publishYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_deleteBook))
                .addGap(19, 19, 19)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_author)
                    .addComponent(jTextField_author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_category)
                    .addComponent(jComboBox_categories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_editBook))
                .addGap(19, 19, 19)
                .addGroup(jPanel_BookEditingAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_publisher)
                    .addComponent(jTextField_publisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_status)
                    .addComponent(jComboBox_bookStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_cleanFields))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_reservation.setBackground(new java.awt.Color(222, 222, 222));

        jButton_reserveBook.setText("Kitabı Rezerve Et");
        jButton_reserveBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_reserveBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_reservationLayout = new javax.swing.GroupLayout(jPanel_reservation);
        jPanel_reservation.setLayout(jPanel_reservationLayout);
        jPanel_reservationLayout.setHorizontalGroup(
            jPanel_reservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_reservationLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton_reserveBook, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel_reservationLayout.setVerticalGroup(
            jPanel_reservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_reservationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_reserveBook, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_bookTabLayout = new javax.swing.GroupLayout(jPanel_bookTab);
        jPanel_bookTab.setLayout(jPanel_bookTabLayout);
        jPanel_bookTabLayout.setHorizontalGroup(
            jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                        .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel_message, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel_BookEditingArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_rowCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_createPDF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel_reservation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane_books)
                    .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                        .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_searchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_searchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_sortCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_searchCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel_bookTabLayout.setVerticalGroup(
            jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_searchBook)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_searchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_sortCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox_searchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane_books, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_rowCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel_message)))
                .addGap(25, 25, 25)
                .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_BookEditingArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                        .addComponent(jButton_createPDF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel_reservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel_bookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_bookTabLayout.createSequentialGroup()
                    .addGap(295, 295, 295)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(181, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_bookTab, javax.swing.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_bookTab, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_searchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchBookActionPerformed
        String query = jTextField_search.getText();
        String searchCriteria = jComboBox_searchCriteria.getSelectedItem().toString();
        String sortCriteria = jComboBox_sortCriteria.getSelectedItem().toString();
        String category = jComboBox_searchCategory.getSelectedItem().toString();

        DefaultTableModel dtm = (DefaultTableModel) jTable_books.getModel();
        dtm.setRowCount(0);

        List<Book> books = Search.searchBook(query, searchCriteria, sortCriteria, category);
        for (Book book : books) {
            dtm.addRow(new Object[]{book.getBookId(), book.getIsbn(), book.getTitle(), book.getAuthor(), book.getPublisher(),
                book.getPublishDate(), book.getNumberOfPages(), book.getBookStatus().displayName(), book.getCategory().getName()});
        }

        jTable_books.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableColumnAdjuster tca = new TableColumnAdjuster(jTable_books);
        tca.adjustColumns();
        updateRowCount();
    }//GEN-LAST:event_jButton_searchBookActionPerformed

    class CustomRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            if (table.getValueAt(row, column).equals(BookStatus.MEVCUT.displayName())) {

                cellComponent.setForeground(new Color(51, 153, 0));
                cellComponent.setFont(cellComponent.getFont().deriveFont(Font.BOLD));

                if (isSelected) {
                    table.setSelectionBackground(new Color(51, 153, 0));
                    table.setSelectionForeground(Color.white);
                    cellComponent.setForeground(Color.white);
                }

            } else if (table.getValueAt(row, column).equals(BookStatus.ODUNC_ALINMIS.displayName())) {

                cellComponent.setForeground(Color.RED);
                cellComponent.setFont(cellComponent.getFont().deriveFont(Font.BOLD));

                if (isSelected) {
                    table.setSelectionBackground(Color.RED);
                    table.setSelectionForeground(Color.white);
                    cellComponent.setForeground(Color.white);
                }

            } else if (table.getValueAt(row, column).equals(BookStatus.REZERVE.displayName())) {
                cellComponent.setFont(cellComponent.getFont().deriveFont(Font.BOLD));
                cellComponent.setForeground(Color.ORANGE);
                if (isSelected) {
                    table.setSelectionBackground(Color.ORANGE);
                    table.setSelectionForeground(Color.white);
                    cellComponent.setForeground(Color.white);
                }

            } else {
                cellComponent.setForeground(Color.GRAY);
                cellComponent.setFont(cellComponent.getFont().deriveFont(Font.BOLD));

                if (isSelected) {
                    table.setSelectionBackground(Color.GRAY);
                    table.setSelectionForeground(Color.white);
                    cellComponent.setForeground(Color.white);
                }
            }
            setHorizontalAlignment(SwingConstants.CENTER);

            return cellComponent;
        }

    }

    private void jTable_booksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_booksMouseClicked
        int selectedRow = jTable_books.getSelectedRow();

        jTextField_isbn.setText(jTable_books.getValueAt(selectedRow, 1).toString());
        jTextField_title.setText(jTable_books.getValueAt(selectedRow, 2).toString());
        jTextField_author.setText(jTable_books.getValueAt(selectedRow, 3).toString());
        jTextField_publisher.setText(jTable_books.getValueAt(selectedRow, 4).toString());
        jTextField_numberOfPages.setText(jTable_books.getValueAt(selectedRow, 6).toString());
        jTextField_publishYear.setText(jTable_books.getValueAt(selectedRow, 5).toString());
        jComboBox_categories.setSelectedItem(jTable_books.getValueAt(selectedRow, 8));
        jComboBox_bookStatus.setSelectedItem(jTable_books.getValueAt(selectedRow, 7));
    }//GEN-LAST:event_jTable_booksMouseClicked

    private void jButton_createPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_createPDFActionPerformed
        new MyPdfWriter().write(jTable_books);
    }//GEN-LAST:event_jButton_createPDFActionPerformed

    private void jButton_cleanFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cleanFieldsActionPerformed
        jTextField_isbn.setText("");
        jTextField_author.setText("");
        jTextField_title.setText("");
        jTextField_numberOfPages.setText("");
        jTextField_publishYear.setText("");
        jTextField_publisher.setText("");
    }//GEN-LAST:event_jButton_cleanFieldsActionPerformed

    private void jButton_editBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_editBookActionPerformed
        int selectedRow = jTable_books.getSelectedRow();

        if (selectedRow == -1) {
            if (jTable_books.getRowCount() == 0) {
                jLabel_message.setText("Tablo boş.");
            } else {
                jLabel_message.setText("Lütfen bir kayıt seçiniz.");
            }
        } else {
            int id = (int) jTable_books.getValueAt(selectedRow, 0);
            String isbn = jTextField_isbn.getText();
            String title = jTextField_title.getText();
            String author = jTextField_author.getText();
            String publisher = jTextField_publisher.getText();
            int numberOfPages = Integer.parseInt(jTextField_numberOfPages.getText());
            int year = Integer.parseInt(jTextField_publishYear.getText());
            String category = jComboBox_categories.getSelectedItem().toString();
            String status = jComboBox_bookStatus.getSelectedItem().toString();

            boolean success = HibernateUtils.editBook(id, isbn, title, author, publisher, numberOfPages, year, category, status);
            if (success) {
                jLabel_message.setText(id + " numaralı kitap başarıyla düzenlendi.");
            } else {
                jLabel_message.setText(id + " numaralı kitap düzenlenirken bir hata oluştu.");
            }

            jButton_searchBook.doClick();
        }
    }//GEN-LAST:event_jButton_editBookActionPerformed

    private void jButton_deleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_deleteBookActionPerformed
        int selectedRow = jTable_books.getSelectedRow();

        if (selectedRow == -1) {
            if (jTable_books.getRowCount() == 0) {
                jLabel_message.setText("Tablo boş.");
            } else {
                jLabel_message.setText("Lütfen bir kayıt seçiniz.");
            }
        } else {
            int id = (int) jTable_books.getValueAt(selectedRow, 0);
            String bookName = jTable_books.getValueAt(selectedRow, 2).toString();

            int answer = CustomDialog.showDialog(null, "<html>Kitap Id: " + id + "<br/>"
                    + "Başlık: " + bookName + "<br/>"
                    + "Bu kitabı silmek istediğinize emin misiniz?</html>");

            if (answer == JOptionPane.YES_OPTION) {
                boolean success = HibernateUtils.deleteBook(id);

                if (success) {
                    jLabel_message.setText(id + " numaralı kitap başarıyla silindi.");
                    jButton_searchBook.doClick();
                    updateRowCount();
                } else {
                    jLabel_message.setText(id + " numaralı kitap silinirken bir hata oluştu.");
                }
            } else {
                jLabel_message.setText("Kitap silme işlemi iptal edildi.");
            }
        }
    }//GEN-LAST:event_jButton_deleteBookActionPerformed

    private void jButton_addBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addBookActionPerformed
        String isbn = jTextField_isbn.getText();
        String title = jTextField_title.getText();
        String author = jTextField_author.getText();
        String publisher = jTextField_publisher.getText();
        int numberOfPages = Integer.parseInt(jTextField_numberOfPages.getText());
        int year = Integer.parseInt(jTextField_publishYear.getText());
        String category = jComboBox_categories.getSelectedItem().toString();
        String status = jComboBox_bookStatus.getSelectedItem().toString();
        int success = HibernateUtils.addBook(isbn, title, author, publisher, numberOfPages, year, category, status);
        if (success != -1) {
            jLabel_message.setText("Kitap başarıyla eklendi. Oluşturulan Id: " + success);
            jButton_searchBook.doClick();
            updateRowCount();
        } else {
            jLabel_message.setText("Kitap eklenirken bir hata oluştu.");
        }
    }//GEN-LAST:event_jButton_addBookActionPerformed

    private void jButton_reserveBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_reserveBookActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable_books.getSelectedRow();
        if (selectedRow == -1) {
            jLabel_message.setText("Lütfen rezerve etmek için bir kitap seçiniz.");
        } else {
            int bookId = (int) jTable_books.getValueAt(selectedRow, 0);
            Book book = Search.searchBook(bookId);
            if (!book.getBookStatus().equals(BookStatus.ODUNC_ALINMIS)) {
                jLabel_message.setText("Rezerve etmek için kitap ödünç alınmış olmalıdır.");
            } else {
                String userId = account.getAccountId();
                Account account = Search.searchUser(userId);
                if (account.getReservedBooks().size() >= 3) {
                    jLabel_message.setText("3 adetten fazla kitap rezerve edemezsiniz.");
                } else {
                    HibernateUtils.reserveBook(bookId, userId);
                    jLabel_message.setText(bookId + " numaralı kitap başarıyla rezerve edildi.");
                }

            }

        }
    }//GEN-LAST:event_jButton_reserveBookActionPerformed

    public void updateRowCount() {
        jLabel_rowCount.setText("Kayıt : " + jTable_books.getRowCount());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_addBook;
    private javax.swing.JButton jButton_cleanFields;
    private javax.swing.JButton jButton_createPDF;
    private javax.swing.JButton jButton_deleteBook;
    private javax.swing.JButton jButton_editBook;
    private javax.swing.JButton jButton_reserveBook;
    private javax.swing.JButton jButton_searchBook;
    private javax.swing.JComboBox<String> jComboBox_bookStatus;
    private javax.swing.JComboBox<String> jComboBox_categories;
    private javax.swing.JComboBox<String> jComboBox_searchCategory;
    private javax.swing.JComboBox<String> jComboBox_searchCriteria;
    private javax.swing.JComboBox<String> jComboBox_sortCriteria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_author;
    private javax.swing.JLabel jLabel_category;
    private javax.swing.JLabel jLabel_isbn;
    private javax.swing.JLabel jLabel_message;
    private javax.swing.JLabel jLabel_numberOfPages;
    private javax.swing.JLabel jLabel_publishYear;
    private javax.swing.JLabel jLabel_publisher;
    private javax.swing.JLabel jLabel_rowCount;
    private javax.swing.JLabel jLabel_status;
    private javax.swing.JLabel jLabel_title;
    private javax.swing.JPanel jPanel_BookEditingArea;
    private javax.swing.JPanel jPanel_bookTab;
    private javax.swing.JPanel jPanel_reservation;
    private javax.swing.JScrollPane jScrollPane_books;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_books;
    private javax.swing.JTextField jTextField_author;
    private javax.swing.JTextField jTextField_isbn;
    private javax.swing.JTextField jTextField_numberOfPages;
    private javax.swing.JTextField jTextField_publishYear;
    private javax.swing.JTextField jTextField_publisher;
    private javax.swing.JTextField jTextField_search;
    private javax.swing.JTextField jTextField_title;
    // End of variables declaration//GEN-END:variables
}
