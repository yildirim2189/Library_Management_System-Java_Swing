/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.yildirimbayrakci.lms;

import com.yildirimbayrakci.entity.Account;
import com.yildirimbayrakci.entity.Book;
import com.yildirimbayrakci.entity.BorrowHistory;
import com.yildirimbayrakci.enums_and_constants.AccountStatus;
import com.yildirimbayrakci.enums_and_constants.AccountType;
import com.yildirimbayrakci.enums_and_constants.BookStatus;
import com.yildirimbayrakci.enums_and_constants.Constants;
import com.yildirimbayrakci.util.DateUtils;
import com.yildirimbayrakci.util.HibernateUtils;
import com.yildirimbayrakci.util.JavaMail;
import com.yildirimbayrakci.util.Search;
import com.yildirimbayrakci.util.TableColumnAdjuster;
import com.yildirimbayrakci.util.MyPdfWriter;
import com.yildirimbayrakci.util.PasswordGenerator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author YILDIRIM
 */
public class UserManagement extends javax.swing.JInternalFrame {

    /**
     * Creates new form UserManagement
     */
    public UserManagement() {
        initComponents();
        setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bif = (BasicInternalFrameUI) getUI();
        bif.setNorthPane(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_user = new javax.swing.JTable();
        jTextField_search = new javax.swing.JTextField();
        jButton_searchUser = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_searchCriteria = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_sortCriteria = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_lendingX = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel_numberOfBooksBorrowed = new javax.swing.JLabel();
        jTextField_userId = new javax.swing.JTextField();
        jTextField_userName = new javax.swing.JTextField();
        jTextField_email = new javax.swing.JTextField();
        jTextField_userSurname = new javax.swing.JTextField();
        jTextField_phone = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox_status = new javax.swing.JComboBox<>();
        jComboBox_type = new javax.swing.JComboBox<>();
        jButton_addUser = new javax.swing.JButton();
        jButton_deleteUser = new javax.swing.JButton();
        jLabel_messageField = new javax.swing.JLabel();
        jButton_lendBook = new javax.swing.JButton();
        jTextField_bookId = new javax.swing.JTextField();
        jButton_cleanFields = new javax.swing.JButton();
        jButton_returnBook = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton_createPDF = new javax.swing.JButton();
        jLabel_rowCount = new javax.swing.JLabel();
        jButton_bringBooks = new javax.swing.JButton();
        jCheckBox_bringReturnedBooks = new javax.swing.JCheckBox();
        jButton_createPDF1 = new javax.swing.JButton();
        jButton_editUser = new javax.swing.JButton();

        setBackground(new java.awt.Color(222, 222, 222));
        setPreferredSize(new java.awt.Dimension(930, 510));

        jPanel1.setBackground(new java.awt.Color(222, 222, 222));
        jPanel1.setPreferredSize(new java.awt.Dimension(870, 500));

        jTable_user.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "Kullanıcı Id", "Ad", "Soyad", "Email","Telefon","Durum","Hesap Tipi","Oluşturulma Tarihi"
            }
        ));
        jTable_user.setName("Kullanıcılar"); // NOI18N
        jTable_user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_userMouseClicked(evt);
            }
        });
        jTable_user.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable_user);

        jButton_searchUser.setText("Kullanıcı Ara");
        jButton_searchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchUserActionPerformed(evt);
            }
        });

        jLabel3.setText("Arama Kriteri");

        jComboBox_searchCriteria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Ad", "Soyad"}));

        jLabel2.setText("Sırala");

        jComboBox_sortCriteria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id", "Ad", "Soyad"}));

        jTable_lendingX.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "İşlem Id","Kitap Id", "Başlık", "Ödünç Tarihi", "Bitiş Tarihi","Teslim Tarihi"
            }
        ));
        jTable_lendingX.setName("Kullanıcı Kitapları"); // NOI18N
        jTable_lendingX.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable_lendingX);

        jLabel1.setText("Kullanıcı Id");

        jLabel5.setText("Ad");

        jLabel6.setText("Soyad");

        jLabel7.setText("Email");

        jLabel8.setText("Telefon");

        jLabel_numberOfBooksBorrowed.setText("Ödünç Alınan Kitap Sayısı :");

        jLabel9.setText("Durum");

        jLabel10.setText("Tip");

        jComboBox_status.setModel(new DefaultComboBoxModel<>());
        for(AccountStatus as : AccountStatus.values()){
            jComboBox_status.addItem(as.displayName());
        }

        jComboBox_type.setModel(new DefaultComboBoxModel<>());
        for(AccountType at: AccountType.values()){
            jComboBox_type.addItem(at.displayName());
        }

        jButton_addUser.setText("Ekle");
        jButton_addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addUserActionPerformed(evt);
            }
        });

        jButton_deleteUser.setText("Sil");
        jButton_deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_deleteUserActionPerformed(evt);
            }
        });

        jLabel_messageField.setForeground(new java.awt.Color(204, 0, 0));

        jButton_lendBook.setText("Ödünç Ver");
        jButton_lendBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_lendBookActionPerformed(evt);
            }
        });

        jButton_cleanFields.setText("Temizle");
        jButton_cleanFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cleanFieldsActionPerformed(evt);
            }
        });

        jButton_returnBook.setText("Teslim Al");
        jButton_returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_returnBookActionPerformed(evt);
            }
        });

        jLabel11.setText("Kitap ID:");

        jLabel12.setText("Mesaj");

        jButton_createPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/pdf.png"))); // NOI18N
        jButton_createPDF.setText("PDF Oluştur");
        jButton_createPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_createPDFActionPerformed(evt);
            }
        });

        jLabel_rowCount.setText("Kayıt: 0");

        jButton_bringBooks.setText("Kitap Getir");
        jButton_bringBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_bringBooksActionPerformed(evt);
            }
        });

        jCheckBox_bringReturnedBooks.setBackground(new java.awt.Color(222, 222, 222));
        jCheckBox_bringReturnedBooks.setText("Teslim edilmiş kitapları getir");

        jButton_createPDF1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/pdf.png"))); // NOI18N
        jButton_createPDF1.setText("PDF Oluştur");
        jButton_createPDF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_createPDF1ActionPerformed(evt);
            }
        });

        jButton_editUser.setText("Düzenle");
        jButton_editUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_editUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_type, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_userId)
                                            .addComponent(jTextField_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_email, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_userSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_userName)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox_status, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton_deleteUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_addUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_cleanFields, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jButton_editUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_bookId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton_lendBook, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_returnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBox_bringReturnedBooks)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton_bringBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_createPDF1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel_messageField, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_rowCount, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_searchUser, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_searchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_sortCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_createPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel_numberOfBooksBorrowed, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_searchUser)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_searchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_sortCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_createPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_messageField, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField_userId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_addUser)
                            .addComponent(jButton_bringBooks)
                            .addComponent(jCheckBox_bringReturnedBooks)
                            .addComponent(jButton_createPDF1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton_deleteUser)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextField_userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextField_userSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton_editUser))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextField_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton_cleanFields))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextField_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jComboBox_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jComboBox_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(jTextField_bookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton_lendBook)
                                    .addComponent(jButton_returnBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(jLabel_rowCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_numberOfBooksBorrowed)
                .addGap(13, 13, 13))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_searchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchUserActionPerformed
        // TODO add your handling code here:
        String query = jTextField_search.getText();
        String searchCriteria = jComboBox_searchCriteria.getSelectedItem().toString();
        String sortCriteria = jComboBox_sortCriteria.getSelectedItem().toString();

        DefaultTableModel dtm = (DefaultTableModel) jTable_user.getModel();
        dtm.setRowCount(0);

        List<Account> accounts = Search.searchUser(query, searchCriteria, sortCriteria);
        accounts.forEach((account) -> {
            dtm.addRow(new Object[]{account.getAccountId(), account.getFirstName(), account.getLastName(), account.getEmail(), account.getPhone(),
                account.getStatus().displayName(), account.getType().displayName(), DateUtils.formatDate(account.getCreationDate())});
        });

        jTable_user.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableColumnAdjuster tca = new TableColumnAdjuster(jTable_user);
        tca.adjustColumns();

        updateRowCount();
    }//GEN-LAST:event_jButton_searchUserActionPerformed

    private void updateLendTable(String accountId) {
        DefaultTableModel dtm = (DefaultTableModel) jTable_lendingX.getModel();
        dtm.setRowCount(0);
        List<BorrowHistory> history;
        if (jCheckBox_bringReturnedBooks.isSelected()) {
            history = Search.searchBorrowHistory(accountId, true);
        } else {
            history = Search.searchBorrowHistory(accountId, false);
        }

        for (BorrowHistory bh : history) {
            dtm.addRow(new Object[]{bh.getBorrowId(), bh.getBook().getBookId(), bh.getBook().getTitle(),
                DateUtils.formatDate(bh.getBorrowDate()), DateUtils.formatDate(bh.getDueDate()),
                DateUtils.formatDate(bh.getReturnDate())
            });
        }
        jTable_lendingX.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableColumnAdjuster tca = new TableColumnAdjuster(jTable_lendingX);
        tca.adjustColumns();

        jLabel_numberOfBooksBorrowed.setText("Ödünç Alınan Kitap Sayısı: " + history.size());

    }


    private void jButton_addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addUserActionPerformed
        // TODO add your handling code here:
        String id = jTextField_userId.getText();
        String password = PasswordGenerator.generateRandomPassword(8);
        String firstName = jTextField_userName.getText();
        String lastName = jTextField_userSurname.getText();
        String email = jTextField_email.getText();
        String phone = jTextField_phone.getText();
        String status = jComboBox_status.getSelectedItem().toString();
        String type = jComboBox_type.getSelectedItem().toString();
        AccountStatus accountStatus = AccountStatus.AKTIF;
        AccountType accountType = AccountType.UYE;

        for (AccountStatus as : AccountStatus.values()) {
            if (as.displayName().equals(status)) {
                accountStatus = as;
            }
        }

        for (AccountType at : AccountType.values()) {
            if (at.displayName().equals(type)) {
                accountType = at;
            }
        }

        if (HibernateUtils.isUsernameExist(id)) {
            jLabel_messageField.setText("Kullanıcı adı zaten mevcut.");
        } else if (!JavaMail.isValidEmail(email)) {
            jLabel_messageField.setText("Geçersiz email adresi girdiniz.");
        } else {
            HibernateUtils.addUser(id, password, firstName, lastName, email, phone, accountStatus, accountType);
            jLabel_messageField.setText("Kullanıcı başarıyla oluşturuldu. Şifre email adresine gönderildi.");
            jButton_searchUser.doClick();
        }
    }//GEN-LAST:event_jButton_addUserActionPerformed

    private void jButton_deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_deleteUserActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable_user.getSelectedRow();
        if (selectedRow == -1)
            ; else {
            String id = jTable_user.getValueAt(selectedRow, 0).toString();
            String firstName = jTable_user.getValueAt(selectedRow, 1).toString();
            String lastName = jTable_user.getValueAt(selectedRow, 2).toString();
            String message = "<html>ID = " + id + ",<br/>" + firstName + " " + lastName + "<br/> isimli kullanıcıyı silmek istediğinize emin misiniz?</html>";

            int clicked = CustomDialog.showDialog(null, message);

            if (clicked == JOptionPane.YES_OPTION) {
                HibernateUtils.deleteUser(id);
                jButton_searchUser.doClick();
                jLabel_messageField.setText("Kullanıcı silindi.");
            } else {
                jLabel_messageField.setText("Kullanıcı silme işlemi iptal edildi.");
            }

        }
    }//GEN-LAST:event_jButton_deleteUserActionPerformed

    private void jButton_lendBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_lendBookActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable_user.getSelectedRow();

        if (selectedRow == -1) {
            jLabel_messageField.setText("Lütfen kitap ödünç vermek için bir kullanıcı seçiniz.");
        } else {
            String accountId = jTable_user.getValueAt(selectedRow, 0).toString();
            Account account = Search.searchUser(accountId);
            if (account.getStatus() == AccountStatus.AKTIF) {
                int borrowedCount = Search.searchBorrowHistory(accountId, false).size();
                if (account.getType() == AccountType.UYE && borrowedCount >= Constants.NORMAL_USER_MAX_BOOKS) {
                    jLabel_messageField.setText("Normal kütüphane üyelerine maximum " + Constants.NORMAL_USER_MAX_BOOKS
                            + " kitap ödünç verilebilir.");
                } else if (account.getType() == AccountType.OGRETIM && borrowedCount >= Constants.ACADEMIC_USER_MAX_BOOKS) {
                    jLabel_messageField.setText("Öğretim üyesi kütüphane üyelerine maximum " + Constants.ACADEMIC_USER_MAX_BOOKS
                            + " kitap ödünç verilebilir.");
                } else {
                    String id = jTextField_bookId.getText();
                    if (id.equals("")) {
                        jLabel_messageField.setText("Lütfen kitap id giriniz.");
                    } else {
                        try {
                            int bookId = Integer.parseInt(id);
                            Book book = Search.searchBook(bookId);
                            if (book == null) {
                                jLabel_messageField.setText(id + " numaralı kitap bulunamadı.");
                            } else if (book.getBookStatus() == BookStatus.ODUNC_ALINMIS) {
                                jLabel_messageField.setText(id + " numaralı kitap ödünç verilmiş.");
                            } else if (book.getBookStatus() == BookStatus.KAYIP) {
                                jLabel_messageField.setText(id + " numaralı kitap kayıp.");
                            } else if (book.getBookStatus() == BookStatus.REZERVE) {
                                boolean isReservedByThisUser = false;
                                for(Book b : account.getReservedBooks()){
                                    if(b.getBookId() == bookId){
                                        isReservedByThisUser= true;
                                    }
                                }
                                if(isReservedByThisUser){
                                    // reserved by that user so give to user
                                    jLabel_messageField.setText(id + " numaralı kitap başarıyla ödünç verildi. Rezervasyon güncellendi.");
                                    HibernateUtils.removeReservation(bookId, accountId);
                                    HibernateUtils.lendBook(accountId, bookId);       
                                }
                                else{
                                    jLabel_messageField.setText(id + " numaralı kitap başka birisi tarafından rezerve edilmiştir.");
                                    for(Book b : account.getReservedBooks())
                                        System.out.println("Reserved: " + b.getTitle());
                                }
                            } else {
                                HibernateUtils.lendBook(accountId, bookId);

                                updateLendTable(accountId);
                                jLabel_messageField.setText(id + " numaralı kitap başarıyla ödünç verildi.");
                            }

                        } catch (NumberFormatException exc) {
                            System.out.println("Number Format Exception!");
                            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, exc);
                        }
                    }
                }
            } else {
                jLabel_messageField.setText("Lütfen ödünç verme işlemi için aktif bir hesap seçiniz.");
            }
        }
    }//GEN-LAST:event_jButton_lendBookActionPerformed

    private void jButton_cleanFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cleanFieldsActionPerformed
        // TODO add your handling code here:
        // 
        jTextField_userId.setText("");
        jTextField_userName.setText("");
        jTextField_userSurname.setText("");
        jTextField_email.setText("");
        jTextField_phone.setText("");
    }//GEN-LAST:event_jButton_cleanFieldsActionPerformed

    private void jButton_returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_returnBookActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable_lendingX.getSelectedRow();
        if (selectedRow == -1) {
            jLabel_messageField.setText("Lütfen teslim etmek için bir kitap seçiniz");
        } else if (jTable_lendingX.getValueAt(selectedRow, 5) != null) {
            jLabel_messageField.setText("Kitap zaten teslim alınmış.");
        } else {
            int bookId = Integer.parseInt(jTable_lendingX.getValueAt(selectedRow, 1).toString());
            HibernateUtils.returnBook(bookId);
            updateLendTable(jTable_user.getValueAt(jTable_user.getSelectedRow(), 0).toString());
            jLabel_messageField.setText(bookId + " numaralı kitap teslim alındı.");
        }
    }//GEN-LAST:event_jButton_returnBookActionPerformed

    private void jButton_createPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_createPDFActionPerformed
        // TODO add your handling code here:
        new MyPdfWriter().write(jTable_user);
    }//GEN-LAST:event_jButton_createPDFActionPerformed

    private void jButton_bringBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_bringBooksActionPerformed
        int selectedRow = jTable_user.getSelectedRow();
        if (selectedRow != -1) {
            String id = jTable_user.getValueAt(selectedRow, 0).toString();
            updateLendTable(id);
        } else {
            jLabel_messageField.setText("Lütfen bir kullanıcı seçiniz.");
        }
    }//GEN-LAST:event_jButton_bringBooksActionPerformed

    private void jButton_createPDF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_createPDF1ActionPerformed

        new MyPdfWriter().write(jTable_lendingX);
    }//GEN-LAST:event_jButton_createPDF1ActionPerformed

    private void jButton_editUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_editUserActionPerformed
        int selectedRow = jTable_user.getSelectedRow();
        if (selectedRow == -1) {
            if (jTable_user.getRowCount() == 0) {
                jLabel_messageField.setText("Tablo boş.");
            } else {
                jLabel_messageField.setText("Lütfen bir kayıt seçiniz.");
            }
        } else {
            String id = jTable_user.getValueAt(selectedRow, 0).toString();
            String firstName = jTextField_userName.getText();
            String lastName = jTextField_userSurname.getText();
            String email = jTextField_email.getText();
            String phone = jTextField_phone.getText();
            String status = jComboBox_status.getSelectedItem().toString();
            String type = jComboBox_type.getSelectedItem().toString();

            if (JavaMail.isValidEmail(email)) {
                boolean success = HibernateUtils.editUser(id, firstName, lastName, email, phone, status, type);
                if (success) {
                    jLabel_messageField.setText("\"" + id + "\" id sahibi kullanıcı bilgileri başarıyla düzenlendi.");
                } else {
                    jLabel_messageField.setText("\"" + id + "\" id sahibi kullanıcı bilgileri düzenlenirken bir hata oluştu.");
                }
                jButton_searchUser.doClick();
            } else {
                jLabel_messageField.setText("Geçersiz email adresi girdiniz.");
            }
        }
    }//GEN-LAST:event_jButton_editUserActionPerformed

    private void jTable_userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_userMouseClicked
        int selectedRow = jTable_user.getSelectedRow();

        jTextField_userId.setText(jTable_user.getValueAt(selectedRow, 0).toString());
        jTextField_userName.setText(jTable_user.getValueAt(selectedRow, 1).toString());
        jTextField_userSurname.setText(jTable_user.getValueAt(selectedRow, 2).toString());
        jTextField_email.setText(jTable_user.getValueAt(selectedRow, 3).toString());
        jTextField_phone.setText(jTable_user.getValueAt(selectedRow, 4).toString());
        jComboBox_status.setSelectedItem(jTable_user.getValueAt(selectedRow, 5));
        jComboBox_type.setSelectedItem(jTable_user.getValueAt(selectedRow, 6));
    }//GEN-LAST:event_jTable_userMouseClicked

    public void updateRowCount() {
        jLabel_rowCount.setText("Kayıt: " + jTable_user.getRowCount());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_addUser;
    private javax.swing.JButton jButton_bringBooks;
    private javax.swing.JButton jButton_cleanFields;
    private javax.swing.JButton jButton_createPDF;
    private javax.swing.JButton jButton_createPDF1;
    private javax.swing.JButton jButton_deleteUser;
    private javax.swing.JButton jButton_editUser;
    private javax.swing.JButton jButton_lendBook;
    private javax.swing.JButton jButton_returnBook;
    private javax.swing.JButton jButton_searchUser;
    private javax.swing.JCheckBox jCheckBox_bringReturnedBooks;
    private javax.swing.JComboBox<String> jComboBox_searchCriteria;
    private javax.swing.JComboBox<String> jComboBox_sortCriteria;
    private javax.swing.JComboBox<String> jComboBox_status;
    private javax.swing.JComboBox<String> jComboBox_type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_messageField;
    private javax.swing.JLabel jLabel_numberOfBooksBorrowed;
    private javax.swing.JLabel jLabel_rowCount;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_lendingX;
    private javax.swing.JTable jTable_user;
    private javax.swing.JTextField jTextField_bookId;
    private javax.swing.JTextField jTextField_email;
    private javax.swing.JTextField jTextField_phone;
    private javax.swing.JTextField jTextField_search;
    private javax.swing.JTextField jTextField_userId;
    private javax.swing.JTextField jTextField_userName;
    private javax.swing.JTextField jTextField_userSurname;
    // End of variables declaration//GEN-END:variables
}
